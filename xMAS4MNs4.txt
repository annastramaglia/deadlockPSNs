const one;
const two;
const three;
const four;
enum pkt{one;two;three;four;};
enum pkt1{two;three;four;};
enum pkt2{one;three;four;};
enum pkt3{one;two;four;};
enum pkt4{one;two;three;};

pred up1 (x: pkt){
x == one;
};

pred up2 (x: pkt){
x == two;
};

pred up3 (x: pkt){
x == three;
};

pred up4 (x: pkt){
x == four;
};


chan m_1 := Merge(Source(pkt1),s_1);
chan q_1 := Queue(1,m_1);

chan sink_2,s_2 := Switch(q_1,up2,otherwise);
Sink(sink_2);
chan m_2 := Merge(Source(pkt2),s_2);
chan q_2 := Queue(1,m_2);


chan sink_3,s_3 := Switch(q_2,up3,otherwise);
Sink(sink_3);
chan m_3 := Merge(Source(pkt3),s_3);
chan q_3 := Queue(1,m_3);


chan sink_4,s_4 := Switch(q_3,up4,otherwise);
Sink(sink_4);
chan m_4 := Merge(Source(pkt4),s_4);

chan q_4 := Queue(1,m_4);

chan sink_1,s_1 := Switch(q_4,up1,otherwise);
Sink(sink_1);